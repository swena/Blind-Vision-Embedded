Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_udivmodhi4.o)
                              adctest.o (__udivmodhi4)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_copy_data.o)
                              adctest.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_clear_bss.o)
                              adctest.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_fixunssfsi.o)
                              adctest.o (__fixunssfsi)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_addsub_sf.o)
                              /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_fixunssfsi.o) (__subsf3)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_mul_sf.o)
                              adctest.o (__mulsf3)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_div_sf.o)
                              adctest.o (__divsf3)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_gt_sf.o)
                              adctest.o (__gtsf2)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_ge_sf.o)
                              /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_fixunssfsi.o) (__gesf2)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_lt_sf.o)
                              adctest.o (__ltsf2)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_sf_to_si.o)
                              adctest.o (__fixsfsi)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_thenan_sf.o)
                              /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_addsub_sf.o) (__thenan_sf)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_addsub_sf.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_addsub_sf.o) (__epilogue_restores__)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_pack_sf.o)
                              /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_addsub_sf.o) (__pack_f)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_unpack_sf.o)
                              /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_addsub_sf.o) (__unpack_f)
/usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_fpcmp_parts_sf.o)
                              /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_gt_sf.o) (__fpcmp_parts_f)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
LOAD adctest.o
LOAD /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1110
 *(.vectors)
 .vectors       0x00000000       0x54 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092      0x3f4 adctest.o
                0x00000092                PLAYNOTE
                0x00000270                InitADC
                0x0000027a                ReadADC
                0x00000292                ir_distance_calculate_cm
                0x000002be                displayOnLed
                0x00000452                main
 .text          0x00000486        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x00000486        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_exit.o)
 .text          0x00000486        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_copy_data.o)
 .text          0x00000486        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_clear_bss.o)
 .text          0x00000486       0x58 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_fixunssfsi.o)
                0x00000486                __fixunssfsi
 .text          0x000004de      0x354 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_addsub_sf.o)
                0x00000776                __addsf3
                0x000007d0                __subsf3
 .text          0x00000832      0x1fa /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_mul_sf.o)
                0x00000832                __mulsf3
 .text          0x00000a2c      0x15e /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_div_sf.o)
                0x00000a2c                __divsf3
 .text          0x00000b8a       0x60 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_gt_sf.o)
                0x00000b8a                __gtsf2
 .text          0x00000bea       0x60 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_ge_sf.o)
                0x00000bea                __gesf2
 .text          0x00000c4a       0x60 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_lt_sf.o)
                0x00000c4a                __ltsf2
 .text          0x00000caa       0xa6 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_sf_to_si.o)
                0x00000caa                __fixsfsi
 .text          0x00000d50        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_thenan_sf.o)
 .text          0x00000d50        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_prologue.o)
 .text          0x00000d50        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_epilogue.o)
 .text          0x00000d50      0x1a2 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_pack_sf.o)
                0x00000d50                __pack_f
 .text          0x00000ef2       0xd2 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_unpack_sf.o)
                0x00000ef2                __unpack_f
 .text          0x00000fc4       0xb2 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_fpcmp_parts_sf.o)
                0x00000fc4                __fpcmp_parts_f
                0x00001076                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001076       0x28 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_udivmodhi4.o)
                0x00001076                __udivmodhi4
 .text.libgcc   0x0000109e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000109e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000109e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000109e       0x38 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_prologue.o)
                0x0000109e                __prologue_saves__
 .text.libgcc   0x000010d6       0x36 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_epilogue.o)
                0x000010d6                __epilogue_restores__
                0x0000110c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000110c        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_exit.o)
                0x0000110c                exit
                0x0000110c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000110c        0x4 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00001110                _etext = .

.data           0x00800060        0xe load address 0x00001110
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x6 adctest.o
                0x00800060                GP2Y0A21YK
 .data          0x00800066        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x00800066        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_exit.o)
 .data          0x00800066        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_copy_data.o)
 .data          0x00800066        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_clear_bss.o)
 .data          0x00800066        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_fixunssfsi.o)
 .data          0x00800066        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_addsub_sf.o)
 .data          0x00800066        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_mul_sf.o)
 .data          0x00800066        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_div_sf.o)
 .data          0x00800066        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_gt_sf.o)
 .data          0x00800066        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_ge_sf.o)
 .data          0x00800066        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_lt_sf.o)
 .data          0x00800066        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_sf_to_si.o)
 .data          0x00800066        0x8 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_thenan_sf.o)
                0x00800066                __thenan_sf
 .data          0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_prologue.o)
 .data          0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_epilogue.o)
 .data          0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_pack_sf.o)
 .data          0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_unpack_sf.o)
 .data          0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_fpcmp_parts_sf.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080006e                . = ALIGN (0x2)
                0x0080006e                _edata = .
                0x0080006e                PROVIDE (__data_end, .)

.bss            0x0080006e        0x0
                0x0080006e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0080006e        0x0 adctest.o
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_exit.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_fixunssfsi.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_addsub_sf.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_mul_sf.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_div_sf.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_gt_sf.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_ge_sf.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_lt_sf.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_sf_to_si.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_thenan_sf.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_prologue.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_epilogue.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_pack_sf.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_unpack_sf.o)
 .bss           0x0080006e        0x0 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_fpcmp_parts_sf.o)
 *(.bss*)
 *(COMMON)
                0x0080006e                PROVIDE (__bss_end, .)
                0x00001110                __data_load_start = LOADADDR (.data)
                0x0000111e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080006e        0x0
                0x0080006e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080006e                PROVIDE (__noinit_end, .)
                0x0080006e                _end = .
                0x0080006e                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab           0x00000000     0x3600
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o
 .stab          0x000006b4      0x960 adctest.o
                                0x96c (size before relaxing)
 .stab          0x00001014      0x318 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_fixunssfsi.o)
                                0x324 (size before relaxing)
 .stab          0x0000132c      0x714 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_addsub_sf.o)
                                0x7a4 (size before relaxing)
 .stab          0x00001a40      0x4a4 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_mul_sf.o)
                                0x600 (size before relaxing)
 .stab          0x00001ee4      0x468 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_div_sf.o)
                                0x5c4 (size before relaxing)
 .stab          0x0000234c      0x228 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_gt_sf.o)
                                0x384 (size before relaxing)
 .stab          0x00002574      0x228 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_ge_sf.o)
                                0x384 (size before relaxing)
 .stab          0x0000279c      0x228 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_lt_sf.o)
                                0x384 (size before relaxing)
 .stab          0x000029c4      0x264 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_sf_to_si.o)
                                0x3c0 (size before relaxing)
 .stab          0x00002c28      0x12c /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_thenan_sf.o)
                                0x288 (size before relaxing)
 .stab          0x00002d54      0x378 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_pack_sf.o)
                                0x4d4 (size before relaxing)
 .stab          0x000030cc      0x2ac /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_unpack_sf.o)
                                0x408 (size before relaxing)
 .stab          0x00003378      0x288 /usr/lib/gcc/avr/4.5.1/avr5/libgcc.a(_fpcmp_parts_sf.o)
                                0x3e4 (size before relaxing)

.stabstr        0x00000000     0x4f0b
 *(.stabstr)
 .stabstr       0x00000000     0x4f0b /usr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(adctest.out elf32-avr)
LOAD linker stubs
